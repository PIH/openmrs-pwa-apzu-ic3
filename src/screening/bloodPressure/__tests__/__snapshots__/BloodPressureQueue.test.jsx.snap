// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: BloodPressureQueue renders properly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(BloodPressureQueue)
    session={
      Object {
        "sessionLocation": Object {
          "uuid": "abc",
        },
      }
    }
  >
    <BloodPressureQueue
      dispatch={[Function]}
      patients={
        Object {
          "1": Object {
            "name": "somePatient",
          },
        }
      }
      session={
        Object {
          "sessionLocation": Object {
            "uuid": "abc",
          },
        }
      }
    >
      <div>
        <Connect(ScreeningTabs)
          dispatch={[Function]}
          filters={
            Object {
              "completed": undefined,
              "required": [Function],
            }
          }
          rowData={
            Array [
              Object {
                "name": "somePatient",
              },
            ]
          }
          rowSelectedActionCreators={
            Array [
              [Function],
            ]
          }
          tabsId="bp-tabs"
          title="Blood Pressure Queue"
        >
          <ScreeningTabs
            dispatch={[Function]}
            filters={
              Object {
                "completed": undefined,
                "required": [Function],
              }
            }
            rowData={
              Array [
                Object {
                  "name": "somePatient",
                },
              ]
            }
            rowSelectedActionCreators={
              Array [
                [Function],
              ]
            }
            tabsId="bp-tabs"
            title="Blood Pressure Queue"
          >
            <div>
              <h3>
                <Label
                  bsClass="label"
                  bsStyle="default"
                >
                  <span
                    className="label label-default"
                  >
                    Blood Pressure Queue
                  </span>
                </Label>
              </h3>
              <Uncontrolled(Tabs)
                className="activeTab"
                defaultActiveKey={1}
                id="bp-tabs"
                onSelect={[Function]}
              >
                <Tabs
                  activeKey={1}
                  animation={true}
                  bsClass="tab"
                  bsStyle="tabs"
                  className="activeTab"
                  id="bp-tabs"
                  mountOnEnter={false}
                  onSelect={[Function]}
                  unmountOnExit={false}
                >
                  <TabContainer
                    activeKey={1}
                    className="activeTab"
                    id="bp-tabs"
                    onSelect={[Function]}
                  >
                    <div
                      className="activeTab"
                      id="bp-tabs"
                    >
                      <Nav
                        bsClass="nav"
                        bsStyle="tabs"
                        justified={false}
                        pullLeft={false}
                        pullRight={false}
                        role="tablist"
                        stacked={false}
                      >
                        <ul
                          className="nav nav-tabs"
                          role="tablist"
                        >
                          <NavItem
                            active={true}
                            activeKey={1}
                            aria-controls="bp-tabs-pane-1"
                            disabled={false}
                            eventKey={1}
                            id="bp-tabs-tab-1"
                            key=".$.0"
                            onKeyDown={[Function]}
                            onSelect={[Function]}
                            role="tab"
                          >
                            <li
                              className="active"
                              role="presentation"
                            >
                              <SafeAnchor
                                aria-controls="bp-tabs-pane-1"
                                aria-selected={true}
                                componentClass="a"
                                disabled={false}
                                id="bp-tabs-tab-1"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="tab"
                              >
                                <a
                                  aria-controls="bp-tabs-pane-1"
                                  aria-selected={true}
                                  href="#"
                                  id="bp-tabs-tab-1"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="tab"
                                >
                                  in-progress(0)
                                </a>
                              </SafeAnchor>
                            </li>
                          </NavItem>
                          <NavItem
                            active={false}
                            activeKey={1}
                            aria-controls="bp-tabs-pane-2"
                            disabled={false}
                            eventKey={2}
                            id="bp-tabs-tab-2"
                            key=".$.1"
                            onKeyDown={[Function]}
                            onSelect={[Function]}
                            role="tab"
                            tabIndex={-1}
                          >
                            <li
                              className=""
                              role="presentation"
                            >
                              <SafeAnchor
                                aria-controls="bp-tabs-pane-2"
                                aria-selected={false}
                                componentClass="a"
                                disabled={false}
                                id="bp-tabs-tab-2"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                role="tab"
                                tabIndex={-1}
                              >
                                <a
                                  aria-controls="bp-tabs-pane-2"
                                  aria-selected={false}
                                  href="#"
                                  id="bp-tabs-tab-2"
                                  onClick={[Function]}
                                  onKeyDown={[Function]}
                                  role="tab"
                                  tabIndex={-1}
                                >
                                  completed(0)
                                </a>
                              </SafeAnchor>
                            </li>
                          </NavItem>
                        </ul>
                      </Nav>
                      <TabContent
                        animation={true}
                        bsClass="tab"
                        componentClass="div"
                        mountOnEnter={false}
                        unmountOnExit={false}
                      >
                        <div
                          className="tab-content"
                        >
                          <Tab
                            eventKey={1}
                            title="in-progress(0)"
                          >
                            <TabPane
                              bsClass="tab-pane"
                              eventKey={1}
                            >
                              <Fade
                                appear={false}
                                in={true}
                                mountOnEnter={false}
                                onEnter={[Function]}
                                onExited={[Function]}
                                timeout={300}
                                unmountOnExit={false}
                              >
                                <Transition
                                  appear={false}
                                  enter={true}
                                  exit={true}
                                  in={true}
                                  mountOnEnter={false}
                                  onEnter={[Function]}
                                  onEntered={[Function]}
                                  onEntering={[Function]}
                                  onExit={[Function]}
                                  onExited={[Function]}
                                  onExiting={[Function]}
                                  timeout={300}
                                  unmountOnExit={false}
                                >
                                  <div
                                    aria-hidden={false}
                                    aria-labelledby="bp-tabs-tab-1"
                                    className="fade tab-pane active in"
                                    id="bp-tabs-pane-1"
                                    role="tabpanel"
                                  >
                                    <Connect(ScreeningQueue)
                                      dispatch={[Function]}
                                      filters={
                                        Array [
                                          [Function],
                                          [Function],
                                        ]
                                      }
                                      onRowCount={[Function]}
                                      rowData={
                                        Array [
                                          Object {
                                            "name": "somePatient",
                                          },
                                        ]
                                      }
                                      rowSelectedActionCreators={
                                        Array [
                                          [Function],
                                        ]
                                      }
                                      title=""
                                    >
                                      <ScreeningQueue
                                        dispatch={[Function]}
                                        filters={
                                          Array [
                                            [Function],
                                            [Function],
                                          ]
                                        }
                                        onRowCount={[Function]}
                                        rowData={
                                          Array [
                                            Object {
                                              "name": "somePatient",
                                            },
                                          ]
                                        }
                                        rowSelectedActionCreators={
                                          Array [
                                            [Function],
                                          ]
                                        }
                                        session={
                                          Object {
                                            "sessionLocation": Object {
                                              "uuid": "abc",
                                            },
                                          }
                                        }
                                        title=""
                                      >
                                        <div>
                                          <CardList
                                            dispatch={[Function]}
                                            fetchListActionCreator={[Function]}
                                            filters={
                                              Array [
                                                [Function],
                                                [Function],
                                                undefined,
                                              ]
                                            }
                                            getIdentifiers={[Function]}
                                            onMountOtherActionCreators={
                                              Array [
                                                [Function],
                                              ]
                                            }
                                            optionalFilters={
                                              Array [
                                                Object {
                                                  "filter": [Function],
                                                  "label": "ART",
                                                },
                                                Object {
                                                  "filter": [Function],
                                                  "label": "EID",
                                                },
                                                Object {
                                                  "filter": [Function],
                                                  "label": "NCD",
                                                },
                                              ]
                                            }
                                            optionalFiltersType="or"
                                            rowData={
                                              Array [
                                                Object {
                                                  "name": "somePatient",
                                                },
                                              ]
                                            }
                                            rowSelectedActionCreators={
                                              Array [
                                                [Function],
                                                [Function],
                                              ]
                                            }
                                            title=""
                                          />
                                        </div>
                                      </ScreeningQueue>
                                    </Connect(ScreeningQueue)>
                                  </div>
                                </Transition>
                              </Fade>
                            </TabPane>
                          </Tab>
                          <Tab
                            eventKey={2}
                            title="completed(0)"
                          >
                            <TabPane
                              bsClass="tab-pane"
                              eventKey={2}
                            >
                              <Fade
                                appear={false}
                                in={false}
                                mountOnEnter={false}
                                onEnter={[Function]}
                                onExited={[Function]}
                                timeout={300}
                                unmountOnExit={false}
                              >
                                <Transition
                                  appear={false}
                                  enter={true}
                                  exit={true}
                                  in={false}
                                  mountOnEnter={false}
                                  onEnter={[Function]}
                                  onEntered={[Function]}
                                  onEntering={[Function]}
                                  onExit={[Function]}
                                  onExited={[Function]}
                                  onExiting={[Function]}
                                  timeout={300}
                                  unmountOnExit={false}
                                >
                                  <div
                                    aria-hidden={true}
                                    aria-labelledby="bp-tabs-tab-2"
                                    className="fade tab-pane"
                                    id="bp-tabs-pane-2"
                                    role="tabpanel"
                                  >
                                    <Connect(ScreeningQueue)
                                      dispatch={[Function]}
                                      filters={
                                        Array [
                                          undefined,
                                        ]
                                      }
                                      onRowCount={[Function]}
                                      rowData={
                                        Array [
                                          Object {
                                            "name": "somePatient",
                                          },
                                        ]
                                      }
                                      rowSelectedActionCreators={
                                        Array [
                                          [Function],
                                        ]
                                      }
                                      title=""
                                    >
                                      <ScreeningQueue
                                        dispatch={[Function]}
                                        filters={
                                          Array [
                                            undefined,
                                          ]
                                        }
                                        onRowCount={[Function]}
                                        rowData={
                                          Array [
                                            Object {
                                              "name": "somePatient",
                                            },
                                          ]
                                        }
                                        rowSelectedActionCreators={
                                          Array [
                                            [Function],
                                          ]
                                        }
                                        session={
                                          Object {
                                            "sessionLocation": Object {
                                              "uuid": "abc",
                                            },
                                          }
                                        }
                                        title=""
                                      >
                                        <div>
                                          <CardList
                                            dispatch={[Function]}
                                            fetchListActionCreator={[Function]}
                                            filters={
                                              Array [
                                                undefined,
                                                undefined,
                                              ]
                                            }
                                            getIdentifiers={[Function]}
                                            onMountOtherActionCreators={
                                              Array [
                                                [Function],
                                              ]
                                            }
                                            optionalFilters={
                                              Array [
                                                Object {
                                                  "filter": [Function],
                                                  "label": "ART",
                                                },
                                                Object {
                                                  "filter": [Function],
                                                  "label": "EID",
                                                },
                                                Object {
                                                  "filter": [Function],
                                                  "label": "NCD",
                                                },
                                              ]
                                            }
                                            optionalFiltersType="or"
                                            rowData={
                                              Array [
                                                Object {
                                                  "name": "somePatient",
                                                },
                                              ]
                                            }
                                            rowSelectedActionCreators={
                                              Array [
                                                [Function],
                                                [Function],
                                              ]
                                            }
                                            title=""
                                          />
                                        </div>
                                      </ScreeningQueue>
                                    </Connect(ScreeningQueue)>
                                  </div>
                                </Transition>
                              </Fade>
                            </TabPane>
                          </Tab>
                        </div>
                      </TabContent>
                    </div>
                  </TabContainer>
                </Tabs>
              </Uncontrolled(Tabs)>
            </div>
          </ScreeningTabs>
        </Connect(ScreeningTabs)>
      </div>
    </BloodPressureQueue>
  </Connect(BloodPressureQueue)>
</Provider>
`;
