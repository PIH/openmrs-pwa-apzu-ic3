// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: SearchPatient renders properly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(SearchPatient)
    columnDefs={Array []}
  >
    <SearchPatient
      columnDefs={Array []}
      dispatch={[Function]}
    >
      <div>
        <h3>
          <Label
            bsClass="label"
            bsStyle="default"
          >
            <span
              className="label label-default"
            >
              Patient Search
            </span>
          </Label>
        </h3>
        <Connect(PatientSearch)
          columnDefs={
            Array [
              Object {
                "field": "uuid",
                "headerName": "uuid",
                "hide": true,
              },
              Object {
                "headerName": "Id",
                "valueGetter": "data.identifiers[0].identifier",
              },
              Object {
                "field": "name.givenName",
                "headerName": "Given Name",
              },
              Object {
                "field": "name.familyName",
                "headerName": "Family Name",
              },
              Object {
                "field": "gender",
                "headerName": "Gender",
              },
              Object {
                "field": "age",
                "headerName": "Age",
              },
            ]
          }
          parseResults={[Function]}
          rowSelectedActionCreators={
            Array [
              [Function],
              [Function],
            ]
          }
        >
          <PatientSearch
            columnDefs={
              Array [
                Object {
                  "field": "uuid",
                  "headerName": "uuid",
                  "hide": true,
                },
                Object {
                  "headerName": "Id",
                  "valueGetter": "data.identifiers[0].identifier",
                },
                Object {
                  "field": "name.givenName",
                  "headerName": "Given Name",
                },
                Object {
                  "field": "name.familyName",
                  "headerName": "Family Name",
                },
                Object {
                  "field": "gender",
                  "headerName": "Gender",
                },
                Object {
                  "field": "age",
                  "headerName": "Age",
                },
              ]
            }
            dispatch={[Function]}
            parseResults={[Function]}
            representation="full"
            rowData={Array []}
            rowSelectedActionCreators={
              Array [
                [Function],
                [Function],
              ]
            }
          >
            <div>
              <ReduxForm
                onSubmit={[Function]}
              >
                <Connect(Form(PatientSearchForm))
                  destroyOnUnmount={true}
                  enableReinitialize={false}
                  forceUnregisterOnUnmount={false}
                  form="search-form"
                  getFormState={[Function]}
                  keepDirtyOnReinitialize={false}
                  onSubmit={[Function]}
                  persistentSubmitErrors={false}
                  pure={true}
                  shouldAsyncValidate={[Function]}
                  shouldError={[Function]}
                  shouldValidate={[Function]}
                  shouldWarn={[Function]}
                  touchOnBlur={true}
                  touchOnChange={false}
                  updateUnregisteredFields={false}
                >
                  <Form(PatientSearchForm)
                    anyTouched={false}
                    array={
                      Object {
                        "insert": [Function],
                        "move": [Function],
                        "pop": [Function],
                        "push": [Function],
                        "remove": [Function],
                        "removeAll": [Function],
                        "shift": [Function],
                        "splice": [Function],
                        "swap": [Function],
                        "unshift": [Function],
                      }
                    }
                    arrayInsert={[Function]}
                    arrayMove={[Function]}
                    arrayPop={[Function]}
                    arrayPush={[Function]}
                    arrayRemove={[Function]}
                    arrayRemoveAll={[Function]}
                    arrayShift={[Function]}
                    arraySplice={[Function]}
                    arraySwap={[Function]}
                    arrayUnshift={[Function]}
                    asyncValidating={false}
                    autofill={[Function]}
                    blur={[Function]}
                    change={[Function]}
                    clearAsyncError={[Function]}
                    clearFields={[Function]}
                    clearSubmit={[Function]}
                    clearSubmitErrors={[Function]}
                    destroy={[Function]}
                    destroyOnUnmount={true}
                    dirty={false}
                    dispatch={[Function]}
                    enableReinitialize={false}
                    focus={[Function]}
                    forceUnregisterOnUnmount={false}
                    form="search-form"
                    getFormState={[Function]}
                    initialize={[Function]}
                    initialized={false}
                    invalid={false}
                    keepDirtyOnReinitialize={false}
                    onSubmit={[Function]}
                    persistentSubmitErrors={false}
                    pristine={true}
                    pure={true}
                    registerField={[Function]}
                    reset={[Function]}
                    resetSection={[Function]}
                    setSubmitFailed={[Function]}
                    setSubmitSucceeded={[Function]}
                    shouldAsyncValidate={[Function]}
                    shouldError={[Function]}
                    shouldValidate={[Function]}
                    shouldWarn={[Function]}
                    startAsyncValidation={[Function]}
                    startSubmit={[Function]}
                    stopAsyncValidation={[Function]}
                    stopSubmit={[Function]}
                    submit={[Function]}
                    submitFailed={false}
                    submitSucceeded={false}
                    submitting={false}
                    syncErrors={Object {}}
                    syncWarnings={Object {}}
                    touch={[Function]}
                    touchOnBlur={true}
                    touchOnChange={false}
                    unregisterField={[Function]}
                    untouch={[Function]}
                    updateSyncErrors={[Function]}
                    updateSyncWarnings={[Function]}
                    updateUnregisteredFields={false}
                    valid={true}
                    validExceptSubmit={true}
                    values={Object {}}
                  >
                    <PatientSearchForm
                      anyTouched={false}
                      array={
                        Object {
                          "insert": [Function],
                          "move": [Function],
                          "pop": [Function],
                          "push": [Function],
                          "remove": [Function],
                          "removeAll": [Function],
                          "shift": [Function],
                          "splice": [Function],
                          "swap": [Function],
                          "unshift": [Function],
                        }
                      }
                      asyncValidate={[Function]}
                      asyncValidating={false}
                      autofill={[Function]}
                      blur={[Function]}
                      change={[Function]}
                      clearAsyncError={[Function]}
                      clearFields={[Function]}
                      clearSubmit={[Function]}
                      clearSubmitErrors={[Function]}
                      destroy={[Function]}
                      dirty={false}
                      dispatch={[Function]}
                      form="search-form"
                      handleSubmit={[Function]}
                      initialize={[Function]}
                      initialized={false}
                      invalid={false}
                      onSubmit={[Function]}
                      pristine={true}
                      pure={true}
                      reset={[Function]}
                      resetSection={[Function]}
                      submit={[Function]}
                      submitFailed={false}
                      submitSucceeded={false}
                      submitting={false}
                      touch={[Function]}
                      untouch={[Function]}
                      valid={true}
                    >
                      <Form
                        bsClass="form"
                        componentClass="form"
                        horizontal={false}
                        inline={false}
                        onSubmit={[Function]}
                      >
                        <form
                          className=""
                          onSubmit={[Function]}
                        >
                          <Grid
                            bsClass="container"
                            componentClass="div"
                            fluid={false}
                          >
                            <div
                              className="container"
                            >
                              <Row
                                bsClass="row"
                                componentClass="div"
                              >
                                <div
                                  className="row"
                                >
                                  <FormGroup
                                    bsClass="form-group"
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass={[Function]}
                                      >
                                        <ControlLabel
                                          bsClass="control-label"
                                          className=""
                                          srOnly={false}
                                        >
                                          <label
                                            className="control-label"
                                          >
                                            Search
                                          </label>
                                        </ControlLabel>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                      >
                                        <div
                                          className=""
                                        >
                                          <Field
                                            component="input"
                                            name="query"
                                            type="text"
                                          >
                                            <Connect(ConnectedField)
                                              _reduxForm={
                                                Object {
                                                  "anyTouched": false,
                                                  "array": Object {
                                                    "insert": [Function],
                                                    "move": [Function],
                                                    "pop": [Function],
                                                    "push": [Function],
                                                    "remove": [Function],
                                                    "removeAll": [Function],
                                                    "shift": [Function],
                                                    "splice": [Function],
                                                    "swap": [Function],
                                                    "unshift": [Function],
                                                  },
                                                  "arrayInsert": [Function],
                                                  "arrayMove": [Function],
                                                  "arrayPop": [Function],
                                                  "arrayPush": [Function],
                                                  "arrayRemove": [Function],
                                                  "arrayRemoveAll": [Function],
                                                  "arrayShift": [Function],
                                                  "arraySplice": [Function],
                                                  "arraySwap": [Function],
                                                  "arrayUnshift": [Function],
                                                  "asyncErrors": undefined,
                                                  "asyncValidate": [Function],
                                                  "asyncValidating": false,
                                                  "autofill": [Function],
                                                  "blur": [Function],
                                                  "change": [Function],
                                                  "clearAsyncError": [Function],
                                                  "clearFields": [Function],
                                                  "clearSubmit": [Function],
                                                  "clearSubmitErrors": [Function],
                                                  "destroy": [Function],
                                                  "destroyOnUnmount": true,
                                                  "dirty": false,
                                                  "dispatch": [Function],
                                                  "enableReinitialize": false,
                                                  "error": undefined,
                                                  "focus": [Function],
                                                  "forceUnregisterOnUnmount": false,
                                                  "form": "search-form",
                                                  "getFormState": [Function],
                                                  "getValues": [Function],
                                                  "initialValues": undefined,
                                                  "initialize": [Function],
                                                  "initialized": false,
                                                  "invalid": false,
                                                  "keepDirtyOnReinitialize": false,
                                                  "onSubmit": [Function],
                                                  "persistentSubmitErrors": false,
                                                  "pristine": true,
                                                  "pure": true,
                                                  "register": [Function],
                                                  "registerField": [Function],
                                                  "registerInnerOnSubmit": [Function],
                                                  "registeredFields": undefined,
                                                  "reset": [Function],
                                                  "resetSection": [Function],
                                                  "sectionPrefix": undefined,
                                                  "setSubmitFailed": [Function],
                                                  "setSubmitSucceeded": [Function],
                                                  "shouldAsyncValidate": [Function],
                                                  "shouldError": [Function],
                                                  "shouldValidate": [Function],
                                                  "shouldWarn": [Function],
                                                  "startAsyncValidation": [Function],
                                                  "startSubmit": [Function],
                                                  "stopAsyncValidation": [Function],
                                                  "stopSubmit": [Function],
                                                  "submit": [Function],
                                                  "submitFailed": false,
                                                  "submitSucceeded": false,
                                                  "submitting": false,
                                                  "syncErrors": Object {},
                                                  "syncWarnings": Object {},
                                                  "touch": [Function],
                                                  "touchOnBlur": true,
                                                  "touchOnChange": false,
                                                  "triggerSubmit": undefined,
                                                  "unregister": [Function],
                                                  "unregisterField": [Function],
                                                  "untouch": [Function],
                                                  "updateSyncErrors": [Function],
                                                  "updateSyncWarnings": [Function],
                                                  "updateUnregisteredFields": false,
                                                  "valid": true,
                                                  "validExceptSubmit": true,
                                                  "values": Object {},
                                                  "warning": undefined,
                                                }
                                              }
                                              component="input"
                                              name="query"
                                              normalize={[Function]}
                                              type="text"
                                            >
                                              <ConnectedField
                                                _reduxForm={
                                                  Object {
                                                    "anyTouched": false,
                                                    "array": Object {
                                                      "insert": [Function],
                                                      "move": [Function],
                                                      "pop": [Function],
                                                      "push": [Function],
                                                      "remove": [Function],
                                                      "removeAll": [Function],
                                                      "shift": [Function],
                                                      "splice": [Function],
                                                      "swap": [Function],
                                                      "unshift": [Function],
                                                    },
                                                    "arrayInsert": [Function],
                                                    "arrayMove": [Function],
                                                    "arrayPop": [Function],
                                                    "arrayPush": [Function],
                                                    "arrayRemove": [Function],
                                                    "arrayRemoveAll": [Function],
                                                    "arrayShift": [Function],
                                                    "arraySplice": [Function],
                                                    "arraySwap": [Function],
                                                    "arrayUnshift": [Function],
                                                    "asyncErrors": undefined,
                                                    "asyncValidate": [Function],
                                                    "asyncValidating": false,
                                                    "autofill": [Function],
                                                    "blur": [Function],
                                                    "change": [Function],
                                                    "clearAsyncError": [Function],
                                                    "clearFields": [Function],
                                                    "clearSubmit": [Function],
                                                    "clearSubmitErrors": [Function],
                                                    "destroy": [Function],
                                                    "destroyOnUnmount": true,
                                                    "dirty": false,
                                                    "dispatch": [Function],
                                                    "enableReinitialize": false,
                                                    "error": undefined,
                                                    "focus": [Function],
                                                    "forceUnregisterOnUnmount": false,
                                                    "form": "search-form",
                                                    "getFormState": [Function],
                                                    "getValues": [Function],
                                                    "initialValues": undefined,
                                                    "initialize": [Function],
                                                    "initialized": false,
                                                    "invalid": false,
                                                    "keepDirtyOnReinitialize": false,
                                                    "onSubmit": [Function],
                                                    "persistentSubmitErrors": false,
                                                    "pristine": true,
                                                    "pure": true,
                                                    "register": [Function],
                                                    "registerField": [Function],
                                                    "registerInnerOnSubmit": [Function],
                                                    "registeredFields": undefined,
                                                    "reset": [Function],
                                                    "resetSection": [Function],
                                                    "sectionPrefix": undefined,
                                                    "setSubmitFailed": [Function],
                                                    "setSubmitSucceeded": [Function],
                                                    "shouldAsyncValidate": [Function],
                                                    "shouldError": [Function],
                                                    "shouldValidate": [Function],
                                                    "shouldWarn": [Function],
                                                    "startAsyncValidation": [Function],
                                                    "startSubmit": [Function],
                                                    "stopAsyncValidation": [Function],
                                                    "stopSubmit": [Function],
                                                    "submit": [Function],
                                                    "submitFailed": false,
                                                    "submitSucceeded": false,
                                                    "submitting": false,
                                                    "syncErrors": Object {},
                                                    "syncWarnings": Object {},
                                                    "touch": [Function],
                                                    "touchOnBlur": true,
                                                    "touchOnChange": false,
                                                    "triggerSubmit": undefined,
                                                    "unregister": [Function],
                                                    "unregisterField": [Function],
                                                    "untouch": [Function],
                                                    "updateSyncErrors": [Function],
                                                    "updateSyncWarnings": [Function],
                                                    "updateUnregisteredFields": false,
                                                    "valid": true,
                                                    "validExceptSubmit": true,
                                                    "values": Object {},
                                                    "warning": undefined,
                                                  }
                                                }
                                                asyncValidating={false}
                                                component="input"
                                                dirty={false}
                                                dispatch={[Function]}
                                                name="query"
                                                normalize={[Function]}
                                                pristine={true}
                                                type="text"
                                              >
                                                <input
                                                  name="query"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onDragStart={[Function]}
                                                  onDrop={[Function]}
                                                  onFocus={[Function]}
                                                  type="text"
                                                  value=""
                                                />
                                              </ConnectedField>
                                            </Connect(ConnectedField)>
                                          </Field>
                                        </div>
                                      </Col>
                                    </div>
                                  </FormGroup>
                                </div>
                              </Row>
                              <Row
                                bsClass="row"
                                componentClass="div"
                              >
                                <div
                                  className="row"
                                >
                                  <FormGroup
                                    bsClass="form-group"
                                  >
                                    <div
                                      className="form-group"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                      >
                                        <div
                                          className=""
                                        >
                                          <ButtonToolbar
                                            bsClass="btn-toolbar"
                                          >
                                            <div
                                              className="btn-toolbar"
                                              role="toolbar"
                                            >
                                              <Button
                                                active={false}
                                                block={false}
                                                bsClass="btn"
                                                bsSize="large"
                                                bsStyle="success"
                                                disabled={true}
                                                type="submit"
                                              >
                                                <button
                                                  className="btn btn-lg btn-success"
                                                  disabled={true}
                                                  type="submit"
                                                >
                                                  Search
                                                </button>
                                              </Button>
                                              <Button
                                                active={false}
                                                block={false}
                                                bsClass="btn"
                                                bsSize="large"
                                                bsStyle="danger"
                                                disabled={true}
                                                onClick={[Function]}
                                              >
                                                <button
                                                  className="btn btn-lg btn-danger"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                  type="button"
                                                >
                                                  Clear Values
                                                </button>
                                              </Button>
                                            </div>
                                          </ButtonToolbar>
                                        </div>
                                      </Col>
                                    </div>
                                  </FormGroup>
                                </div>
                              </Row>
                            </div>
                          </Grid>
                        </form>
                      </Form>
                    </PatientSearchForm>
                  </Form(PatientSearchForm)>
                </Connect(Form(PatientSearchForm))>
              </ReduxForm>
              <Connect(DataGrid)
                columnDefs={
                  Array [
                    Object {
                      "field": "uuid",
                      "headerName": "uuid",
                      "hide": true,
                    },
                    Object {
                      "headerName": "Id",
                      "valueGetter": "data.identifiers[0].identifier",
                    },
                    Object {
                      "field": "name.givenName",
                      "headerName": "Given Name",
                    },
                    Object {
                      "field": "name.familyName",
                      "headerName": "Family Name",
                    },
                    Object {
                      "field": "gender",
                      "headerName": "Gender",
                    },
                    Object {
                      "field": "age",
                      "headerName": "Age",
                    },
                  ]
                }
                rowData={Array []}
                rowSelectedActionCreators={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              >
                <DataGrid
                  columnDefs={
                    Array [
                      Object {
                        "field": "uuid",
                        "headerName": "uuid",
                        "hide": true,
                      },
                      Object {
                        "headerName": "Id",
                        "valueGetter": "data.identifiers[0].identifier",
                      },
                      Object {
                        "field": "name.givenName",
                        "headerName": "Given Name",
                      },
                      Object {
                        "field": "name.familyName",
                        "headerName": "Family Name",
                      },
                      Object {
                        "field": "gender",
                        "headerName": "Gender",
                      },
                      Object {
                        "field": "age",
                        "headerName": "Age",
                      },
                    ]
                  }
                  dispatch={[Function]}
                  rowData={Array []}
                  rowSelectedActionCreators={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                >
                  <div
                    style={
                      Object {
                        "height": "600px",
                      }
                    }
                  >
                    <label>
                      Search:
                      <input
                        onChange={[Function]}
                        type="text"
                      />
                    </label>
                    <AgGridReact
                      columnDefs={
                        Array [
                          Object {
                            "field": "uuid",
                            "headerName": "uuid",
                            "hide": true,
                          },
                          Object {
                            "headerName": "Id",
                            "valueGetter": "data.identifiers[0].identifier",
                          },
                          Object {
                            "field": "name.givenName",
                            "headerName": "Given Name",
                          },
                          Object {
                            "field": "name.familyName",
                            "headerName": "Family Name",
                          },
                          Object {
                            "field": "gender",
                            "headerName": "Gender",
                          },
                          Object {
                            "field": "age",
                            "headerName": "Age",
                          },
                        ]
                      }
                      enableSorting={true}
                      id="omrsGrid"
                      onGridReady={[Function]}
                      onSelectionChanged={[Function]}
                      rowClassRules="rowClassRules"
                      rowData={Array []}
                      rowSelection="single"
                    >
                      <div
                        style={
                          Object {
                            "height": "100%",
                          }
                        }
                      />
                    </AgGridReact>
                  </div>
                </DataGrid>
              </Connect(DataGrid)>
            </div>
          </PatientSearch>
        </Connect(PatientSearch)>
      </div>
    </SearchPatient>
  </Connect(SearchPatient)>
</Provider>
`;
